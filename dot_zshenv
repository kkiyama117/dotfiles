: "path" && {
  : "XDG" && {
    export CONF_HOME=$HOME/.config
    export XDG_CONFIG_HOME=$CONF_HOME
    export XDG_CACHE_HOME=$HOME/.cache
    export XDG_DATA_HOME=$HOME/.local/share

   : "XDG" && {
     # zsh
     export ZDOTDIR=$HOME/.config/zsh
     if [[ ! -f $XDG_DATA_HOME/zsh/history ]]; then
       mkdir $XDG_DATA_HOME/zsh
       touch $XDG_DATA_HOME/zsh/history
     fi
     export HISTFILE=$XDG_DATA_HOME/zsh/history
   }

    # others
    export CUDA_CACHE_PATH=$XDG_CACHE_HOME/nv
    export DOCKER_CONFIG=$XDG_CONFIG_HOME/docker
    #export GNUPGHOME="$XDG_DATA_HOME"/gnupg
    #gpg2 --homedir "$XDG_DATA_HOME"/gnupg
    #export XAUTHORITY=$XDG_CONFIG_HOME/Xauthority
    export XINITRC=$XDG_CONFIG_HOME/X11/xinitrc
    #export XSERVERRC=$XDG_CONFIG_HOME/X11/xserverrc
    export WINEPREFIX="$XDG_DATA_HOME"/wineprefixes/default
  }
  : "general" && {
    export LANG=ja_JP.UTF-8
    export EDITOR=nvim
  }
  : "java" && {
    : "jdk" && {
      # archlinux-java
      export JAVA_HOME=/usr/lib/jvm/default
      export PATH=$JAVA_HOME/bin:$PATH
      export _JAVA_OPTIONS=-Djava.util.prefs.userRoot="$XDG_CONFIG_HOME"/java
    }
    : "gradle" && {
      export GRADLE_USER_HOME="$XDG_DATA_HOME"/gradle
    }
  }
  : "python" && {
    if (( $+commands[pyenv] )) then
      export PYENV_ROOT=$HOME/.pyenv
      export PATH=$PYENV_ROOT/shims:$PATH
      if ! [ -f /tmp/pyenv.cache ]
      then
         pyenv init - > /tmp/pyenv.cache
         zcompile /tmp/pyenv.cache
      fi
      source /tmp/pyenv.cache
      # zinit ice wait"0!"; eval "$(pyenv init -)"
      alias pip3='noglob python -m pip'
      alias pip=pip3
    else
      alias python3='/usr/bin/python3'
      alias python=python
      alias pip3='noglob python3 -m pip'
      alias pip=pip3
    fi
    : "pipenv" && {
      export PIPENV_VENV_IN_PROJECT=true
    }
  }
  : "ruby" && {
    if (( $+commands[rbenv] )) then
      export PATH=$HOME/.rbenv/shims:$PATH
      if ! [ -f /tmp/rbenv.cache ]
      then
         rbenv init - > /tmp/rbenv.cache
         zcompile /tmp/rbenv.cache
      fi
      source /tmp/rbenv.cache
    fi
  }
  : "go" && {
    if (( $+commands[go] )) then
      export GOPATH="$XDG_DATA_HOME"/go
      export PATH=$GOPATH/bin:$PATH
    fi
  }
  : "js" && {
    if (( $+commands[volta] )) then
      export VOLTA_HOME="$HOME/.volta"
      # for jetbrains
      #export PATH="$VOLTA_HOME/tools/image/yarn/$(yarn --version)/bin:$PATH"
      # normal
      export PATH="$VOLTA_HOME/bin:$PATH"
      # export PATH=$XDG_DATA_HOME/npm/bin:$PATH
      export NPM_CONFIG_USERCONFIG=$XDG_CONFIG_HOME/npm/npmrc
    fi
  }
  : "android" && {
    # export ANDROID_SDK_ROOT="/opt/android"
    export ANDROID_SDK_ROOT="/opt/android-sdk"
    export ANDROID_JAVA_HOME="opt/android-studio/jre"
    export ANDROID_SDK_HOME=$XDG_CONFIG_HOME/android
    export ANDROID_AVD_HOME=$XDG_DATA_HOME/android/
    export ANDROID_EMULATOR_HOME=$XDG_DATA_HOME/android/
    export ADB_VENDOR_KEY=$XDG_CONFIG_HOME/android
    export PATH=$ANDROID_SDK_ROOT/tools:$ANDROID_SDK_ROOT/tools/bin:$ANDROID_SDK_ROOT/platform-tools:${ANDROID_SDK_ROOT}/emulator:$PATH
  }
  : "flutter" && {
    # install by aur
    export FLUTTER_ROOT="/opt/flutter"
    export PATH=$FLUTTER_ROOT/bin:$PATH
    if (( $+commands[flutter] )) then
      export FLUTTER_PUB_CACHE="$HOME/.pub-cache"
      export PATH=$FLUTTER_PUB_CACHE/bin:$PATH
      export CHROME_EXECUTABLE=google-chrome-stable
    fi
  }
  : "rust" && {
    if (( $+commands[cargo] )); then
      export CARGO_HOME=$HOME/.cargo
      export PATH=$CARGO_HOME/bin:$PATH
    elif [ -d $HOME/.cargo ]; then
      # export CARGO_HOME=$XDG_DATA_HOME/cargo
      export CARGO_HOME=$HOME/.cargo
      export PATH=$CARGO_HOME/bin:$PATH
    fi
  }
  : "deno" && {
    if (( $+commands[deno] )) then
      export DENO_MY_PATH=$HOME/.deno
      export PATH=$DENO_MY_PATH/bin:$PATH
    fi
  }
  : "ocaml" && {
    if (( $+commands[opam] )) then
       #eval $(opam env)
       # opam configuration
       [[ ! -r /home/kiyama/.opam/opam-init/init.zsh ]] || source /home/kiyama/.opam/opam-init/init.zsh  > /dev/null 2> /dev/null
    fi
  }
  : "neovim" && {
    if (( $+commands[nvim] )) then
      export NHOME="$HOME/.config/nvim"
      export DENOPS_PATH="$HOME/programs/others/vim-jp/denops.vim"
      export DENOPS_TEST_NVIM="/usr/bin/nvim"
      alias vimdiff="nvim -d"
    fi
  }
  : "skim" && {
    if (( $+commands[sk] )) then
      export SKIM_DEFAULT_OPTIONS="--ansi"
      lnlink="$HOME/.local/bin/fzf"
      if [ ! -L ${lnlink} ]; then
        ln -s "$(which sk)" ${lnlink}
      fi
    fi
  }
  : "zoxide" && {
    if (( $+commands[zoxide] )) then
      export SK_DEFAULT_OPTS="$FZF_DEFAULT_OPTS" sk "$@"
    fi
  }
  : "topgrade" && {
    if (( $+commands[topgrade] )) then
      alias upd="topgrade -y --disable cargo flutter"
    fi
  }
  : "htop" && {
    if (( $+commands[htop] )) then
      alias top="htop"
    fi
  }
  : "chezmoi" && {
    if (( $+commands[chezmoi] )) then
      alias confed='chezmoi edit --apply'
      alias confcd='chezmoi cd'
      alias confgit='chezmoi git --'
      alias conf='chezmoi apply -rv'
    fi
  }
}
